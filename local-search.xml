<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何使用Hexo+GitHub搭建博客</title>
    <link href="/2020/02/13/2020-02-13-how%20to%20set%20up%20our%20blog/"/>
    <url>/2020/02/13/2020-02-13-how%20to%20set%20up%20our%20blog/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文写给那些0基础却希望拥有一个自己的博客的小白，不会介绍很多高级的用法及hexo的详细配置，如果想要更深入的了解，请参照<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo文档</a>及<a href="https://fluid-dev.github.io/hexo-fluid-docs/" target="_blank" rel="noopener">Fluid文档</a>进行配置。  </p></blockquote><h3 id="一-Hexo及Fluid主题的优势"><a href="#一-Hexo及Fluid主题的优势" class="headerlink" title="一.Hexo及Fluid主题的优势"></a>一.Hexo及Fluid主题的优势</h3><p>&emsp;&emsp; 在基于GitHub平台使用静态博客搭建主流的主题有有两种：  </p><ul><li>Jekyll</li><li>Hexo  </li></ul><p>&emsp;&emsp; 一开始我选择的是Jekyll，没有去使用git工具，只使用了GitHub桌面版+Visual Studio进行操作，每次修改完代码就进行push（即把代码更新到GitHub仓库里），再进入我的博客进行查看，一开始觉得没什么，不就是push完了再在线查看吗？也挺方便的。但是当我这两天再次使用Hexo搭建一个新的博客时，发现这两者的用户体验真的是有天壤之别。 下面我就说一下他们的差别： </p><ol><li>使用GitHub桌面版进行clone时，下载都是几KB每秒，这下载速度真的很让人<del>头秃</del>（偷懒），每次clone一个项目我都忍不住去玩一把云顶之奕！而使用Hexo用git bash下载速度是真的快，一分钟之内就能下载好（我也不知道原因是什么）。  </li><li>使用Jekyll无法本地查看渲染的博客，而Hexo可以在本地渲染博客，每次修改无需上传到GitHub即可查看。  </li><li>Hexo是一个台湾小哥开发的，所以有中文文档，而Jekyll的官方文档网页我压根就打不开！！！所以当我clone一个博客模板想改成自己的博客时，Hexo使用起来是真的方便！当然也要感谢Fluid开发人员写了一个他们自己主题的文档，我几乎没有看过Hexo的文档，根据Fluid的文档进行修改就完成了我的博客。（大约耗费了8个小时）</li></ol><h3 id="二-如何创建属于你的私人博客"><a href="#二-如何创建属于你的私人博客" class="headerlink" title="二.如何创建属于你的私人博客"></a>二.如何创建属于你的私人博客</h3><h4 id="1-注册GitHub账号"><a href="#1-注册GitHub账号" class="headerlink" title="1.注册GitHub账号"></a>1.注册GitHub账号</h4><p>&emsp;&emsp; 在<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>创建账号即可，此步骤比较简单，我就不过多赘述。建议起一个好看的名字，因为会用于你的博客访问路径。<br>&emsp;&emsp; 在注册好你的GitHub账号以后，点击右上角头像旁边的+号，选择new repository新建一个你的仓库，用于存放你的hexo文件。此处注意，仓库名必须要用“你的仓库名”+“.github.io”，其他选项照图片选中即可。<br><img src="/img/blog_img/2020213/888.png" srcset="/img/loading.gif" alt=""></p><h4 id="2-安装git及Node-js"><a href="#2-安装git及Node-js" class="headerlink" title="2.安装git及Node.js"></a>2.安装git及Node.js</h4><p>安装git ：进入 <a href="https://git-scm.com/download" target="_blank" rel="noopener">git下载</a> 界面选择所对应的版本下载安装即可。如果下载的很慢或点了下载以后没反应，可以在<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝的npm</a>进行下载。这个下载速度很快。  </p><p>安装Node.js：在<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js官网</a>下载并安装LTS版本即可。  </p><h4 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h4><p> &emsp;&emsp; 在安装Hexo之前先检查一下你的git 和node.js是否安装成功。打开你的git bash窗口(注意这里不是用CMD窗口)，输入以下命令检查。如果安装成功会返回版本号。</p><pre><code>git version node -vnpm -v</code></pre><p><img src="/img/blog_img/2020213/gitnodejs.png" srcset="/img/loading.gif" alt=""></p><p>&emsp;&emsp; 如果安装成功会返回版本号如上图所示。接下来我们就可以安装Hexo了，在git bash中输入以下命令：</p><pre><code>npm install -g hexo-clihexo init myblogcd myblognpm install</code></pre><p>&emsp;&emsp; 以上就已经安装好你的nexo了。<br>&emsp;&emsp; 现在你就可以输入以下命令来启动你的hexo来在你的本地计算机上访问你的博客的雏形</p><pre><code>hexo s</code></pre><p>&emsp;&emsp; 打开浏览器输入 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可访问你的博客。</p><p>&emsp;&emsp; 到这你的博客就已经搭建成功啦！一开始我在搭建hexo博客的时候看见还要使用git这么麻烦的东西就很头疼，但是真正操作下来发现并没有那么难，就是照搬输入几行命令就好啦！</p><h4 id="4-配置SSH-key"><a href="#4-配置SSH-key" class="headerlink" title="4.配置SSH  key"></a>4.配置SSH  key</h4><p>&emsp;&emsp;这一步要注意一点，每一条命令的空格要输入正确否则可能会出错，如果配置过程中遇到错误可以百度解决。输入正确的话基本没啥事。<br>&emsp;&emsp;依然是使用我们的git bash窗口，输入以下命令创建SSH Key（如果你此前创建过那就可以跳过这一步，大多数人是没创建过的）：</p><pre><code>git config --global user.name &quot;用户名&quot;  #使用你的Github用户名git config --global user.email &quot;邮箱地址&quot;  #你用于创建GitHub账号的邮箱</code></pre><p>&emsp;&emsp;然后开始生成你的SSH Ksy，并查看你的SSH Key</p><pre><code>ssh-keygen -t rsa -C &#39;上面的邮箱&#39; #这一步需要按照提示按三下回车键，不要关掉这个窗口，一会需要复制东西。</code></pre><p>&emsp;&emsp;接着我们去GitHub官网进行设置，点击你的头像➡setting➡SSH and GPG keys➡new SSH key ，标题可以随便填写，key就填刚刚我们在git bash生成的那一串字符。<br><img src="/img/blog_img/2020213/githubsshkey.png" srcset="/img/loading.gif" alt=""><br>&emsp;&emsp;接着我们回到git bash窗口，输入以下命令：</p><pre><code>ssh -T git@github.com</code></pre><p>&emsp;&emsp;若返回 Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access. 内容，则证明添加成功。</p><h4 id="5-连接hexo上传到你的GitHub"><a href="#5-连接hexo上传到你的GitHub" class="headerlink" title="5.连接hexo上传到你的GitHub"></a>5.连接hexo上传到你的GitHub</h4><p>&emsp;&emsp;打开你的myblog文件夹，在根目录下的_config.yml 配置文件的最末尾将你的github项目的网址填入。<br><img src="/img/blog_img/2020213/555.png" srcset="/img/loading.gif" alt=""></p><p>&emsp;&emsp;安装一个部署插件 hexo-deployer-git</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>&emsp;&emsp;执行以下的命令，就可以将你的hexo文件上传至你刚刚新建的github repository了。</p><pre><code>hexo g -d</code></pre><p>&emsp;&emsp;最后，打开你的GitHub的仓库就可以看见你的hexo文件夹了。点击你仓库的setting，滑到后面，可以看到你的博客的访问入口。<br><img src="/img/blog_img/2020213/666.png" srcset="/img/loading.gif" alt=""><br><img src="/img/blog_img/2020213/777.png" srcset="/img/loading.gif" alt=""></p><h4 id="6-更换博客主题"><a href="#6-更换博客主题" class="headerlink" title="6.更换博客主题"></a>6.更换博客主题</h4><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a> 有很多款优秀程序员开发的主题，你可以挑选一款你喜爱的主题进行布置。每一款主题都有其对应的说明文档，有的主题的文档介绍的很清晰，有的介绍的有点难看懂。大家可以细心挑选。<br>如果大家喜欢我所用的这款主题，可以查看<a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/" target="_blank" rel="noopener">Fluid文档</a>进行修改。</p><p>&emsp;&emsp;以上我们就可以创建好博客啦。</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客之前的一些简单介绍</title>
    <link href="/2020/02/12/2020-02-12-internet/"/>
    <url>/2020/02/12/2020-02-12-internet/</url>
    
    <content type="html"><![CDATA[<blockquote><p>萌新初次搭建博客，经历了很多困难与挫折<br>如果你也想搭建属于自己的博客，欢迎参考我的教程<br>用最简单的语言，最傻瓜式的方式教你搭建博客<br>不需要任何基础哦，只需要一双手和一台电脑 </p></blockquote><a id="more"></a> <p><font size=4 color=#ff6600 face="黑体">写在最前面:</font><br>&emsp;&emsp;经过一天的尝试，终于把属于自己的博客搭好了，博客，顾名思义，就是用来记录自己学习经历，所遇到的问题，因此开篇我就来介绍一下是如何搭建该博客的吧~<br>&emsp;&emsp;本文是想给跟我一样0基础的小白介绍一下搭建博客之前需要简单了解的基础知识，下一篇文章将介绍如何搭建属于自己的博客，不涉及Jekyll、GitHub等的具体细节，不涉及二者的高级用法，尽量让那些只要会操作电脑的人都能够看懂如何创建一个博客。当然如果遇到了任何问题欢迎找我交流~</p><h3 id="1-计算机网络"><a href="#1-计算机网络" class="headerlink" title="1.计算机网络"></a>1.计算机网络</h3><p>&emsp;&emsp;计算机网络所涉及的内容过于庞杂，因此我就只简单介绍一下我们平常访问一个网页的原理是什么。平常我们访问网页，比如说<a href="http://www.github.com" target="_blank" rel="noopener">www.github.com</a> ，当我们在浏览器输入并回车以后，浏览器会自动使用DNS协议向DNS服务器发送数据包，DNS服务器会返回给我们GitHub的IP地址，浏览器会根据GitHub的IP地址去访问它的服务器，最后下载我们所访问的网页的html再展示给用户。<br>&emsp;&emsp;说白了就是一个客户端，一个服务端，客户端发送请求，服务端进行后台操作并返回客户端的请求。中间会通过DNS协议帮我们解析IP地址。<br><img src="/img/blog_img/2020212/blog_content.jpg" srcset="/img/loading.gif" alt=""></p><h3 id="2-常见的搭博客的方法"><a href="#2-常见的搭博客的方法" class="headerlink" title="2.常见的搭博客的方法"></a>2.常见的搭博客的方法</h3><p>本人只介绍两个我比较熟悉方法，如果有其他的，欢迎补充~~  </p><ul><li>通过GitHub平台搭建（即本人所使用的方法）</li><li>自己租用云服务器，购买域名，使用html5+其他后端语言如python、php等自己做前端+后端等 </li></ul><p>&emsp;&emsp;作为学生党，且作为一个编程菜鸟甚至不会编程的萌新，使用第二种方法明显是不可能的。第一，没技术。你会HTML、CSS、JavaScript吗？你会美工吗？你会设计网页样式吗？你会PHP、python等可以做后端的语言吗？你会SQL数据库操作吗？如果你都会，那么恭喜你，你已经是个合格的全栈工程师了！第二，花钱租服务器，租一个云服务器+购买域名最少一个月也得几十块钱吧，对于我们只需要自己记录记录的人来说，可以花这钱，但没必要。</p><h3 id="3-GitHub介绍"><a href="#3-GitHub介绍" class="headerlink" title="3.GitHub介绍"></a>3.GitHub介绍</h3><p>&emsp;&emsp;GitHub是一个面向开源及私有软件项目的托管平台，聚集了无数优秀程序员的开源平台，是程序员的圣地，截止目前，GitHub 已经发展成全球最大的开（同）源（性）社区。<br>&emsp;&emsp;GitHub有什么用？</p><ul><li>学习优秀的开源项目</li><li>多人协作办公</li><li><font color=#ff0000 >搭建博客、个人网站或者公司官网</font></li><li>其他</li></ul><p>&emsp;&emsp;为什么要加个其他呢？因为只有想不到没有做不到~不过请放心，本教程不会介绍也不涉及很复杂的git操作，只需要使用GitHub桌面版懂得如何clone、push一个项目即可。</p><h3 id="4-Jekyll介绍"><a href="#4-Jekyll介绍" class="headerlink" title="4.Jekyll介绍"></a>4.Jekyll介绍</h3><p>&emsp;&emsp;当然在介绍Jekyll之前我们不得不简单提一下GitHub Pages 是啥（Github Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服 务，站点可以被免费托管在 Github 上）&emsp;嗯，说完这些我猜你也没看懂，不过你只需要知道我们可以将一个静态博客框架放进GitHub的仓库里，再改个名，别人就可以通过GitHub来访问你的博客了。<br>&emsp;&emsp;目前有两大静态的博客主流框架jekyll和hexo（在我写这篇博客之前只知道jekyll，现在我发现hexo好像更酷！）jekyll和hexo就是两种不同版本的博客框架，你可以想象成就是可以给你提供博客样式选择，选一款你喜欢的样式然后再GitHub上clone下来，再将里面的信息改成自己的即可~</p><p>以上就是在搭建博客之前我想介绍给大家的东西，如果没看懂也没关系~下一篇文章将具体向大家介绍如何搭建自己的博客</p>]]></content>
    
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
